// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/src/main/protobuf/webutil/html/types/html.proto
// Protobuf Java Version: 4.28.2

package com.google.common.html.types;

/**
 * Protobuf enum {@code webutil.html.types.CustomSafeUrlScheme}
 */
public enum CustomSafeUrlScheme
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Schemes that are safe w.r.t. XSS but that may trigger other problematic
   * actions when presented in the context of a "regular" link are not
   * allowed by default but can still be converted to SafeUrl by
   * allowing them explicitly in the SafeUrl sanitization API. In other
   * words, the caller has to indicate that they're expecting to process
   * such custom schemes.
   *
   * iOS Webview does not ask for confirmation before invoking 'tel', so
   * unintentional or out-of-context clicks could result in unintended calling
   * charges.
   * </pre>
   *
   * <code>TEL = 0;</code>
   */
  TEL(0),
  /**
   * <code>SMS = 1;</code>
   */
  SMS(1),
  /**
   * <pre>
   * Similarly to 'tel' can result in unintended calling charges on iOS.
   * </pre>
   *
   * <code>CALLTO = 2;</code>
   */
  CALLTO(2),
  /**
   * <code>WTAI = 3;</code>
   */
  WTAI(3),
  /**
   * <pre>
   * Can start a media stream, potentially triggering an exploit for
   * Stagefright.
   * </pre>
   *
   * <code>RTSP = 4;</code>
   */
  RTSP(4),
  /**
   * <pre>
   * Can open Play Store dialog with 'Install' button, though will not
   * automatically install an app.
   * </pre>
   *
   * <code>MARKET = 5;</code>
   */
  MARKET(5),
  /**
   * <code>GEO = 6;</code>
   */
  GEO(6),
  /**
   * <code>SKYPE = 7;</code>
   */
  SKYPE(7),
  /**
   * <code>WHATSAPP = 8;</code>
   */
  WHATSAPP(8),
  /**
   * <pre>
   * Custom scheme for iTunes URIs.
   * </pre>
   *
   * <code>ITMS = 20;</code>
   */
  ITMS(20),
  /**
   * <pre>
   * Custom scheme for iBooks URIs. More background: b/32807272.
   * </pre>
   *
   * <code>ITMS_BOOKS = 9;</code>
   */
  ITMS_BOOKS(9),
  /**
   * <pre>
   * Custom scheme for Google Glass URIs. More background: b/74019421.
   * </pre>
   *
   * <code>GLASS = 10;</code>
   */
  GLASS(10),
  /**
   * <pre>
   * Custom schemes for App Store URIs. More background: b/77343280.
   * </pre>
   *
   * <code>ITMS_APPS = 11;</code>
   */
  ITMS_APPS(11),
  /**
   * <code>ITMS_APPSS = 19;</code>
   */
  ITMS_APPSS(19),
  /**
   * <pre>
   * Custom scheme for iTunes enterprise/development app downloads.
   * </pre>
   *
   * <code>ITMS_SERVICES = 22;</code>
   */
  ITMS_SERVICES(22),
  /**
   * <code>GOOGLEASSISTANT = 12;</code>
   */
  GOOGLEASSISTANT(12),
  /**
   * <code>ASSISTANT_SETTINGS = 13;</code>
   */
  ASSISTANT_SETTINGS(13),
  /**
   * <pre>
   * Can open a terminal; some terminal emulators have a history of RCE.
   * At least chrome opens a confirmation prompt.
   * </pre>
   *
   * <code>SSH = 14;</code>
   */
  SSH(14),
  /**
   * <pre>
   * Only "browseable" intents can be opened with an intent: URI. Any webpage
   * can open any intent URL. However, switching apps can be disruptive to UX.
   * </pre>
   *
   * <code>INTENT = 15;</code>
   */
  INTENT(15),
  /**
   * <pre>
   * "sip:" is very much like "tel:" but with an email address.
   * </pre>
   *
   * <code>SIP = 16;</code>
   */
  SIP(16),
  /**
   * <code>GOOGLEHOME = 17;</code>
   */
  GOOGLEHOME(17),
  /**
   * <code>CHROMECAST = 18;</code>
   */
  CHROMECAST(18),
  /**
   * <code>PAY = 21;</code>
   */
  PAY(21),
  /**
   * <code>GOOGLEAPP = 23;</code>
   */
  GOOGLEAPP(23),
  /**
   * <pre>
   * cid: schemes are not interpreted by browsers, but by mail clients.
   * and only typically refer to resources that are already part of the message.
   * </pre>
   *
   * <code>CID = 24;</code>
   */
  CID(24),
  /**
   * <pre>
   * webcal: safe w.r.t. XSS. Navigates to a calendar app, which will subscribe
   * to the .ical file rather than downloading the file. Google calendar asks
   * confirmation if the user wants to subscribe to the calendar.
   * </pre>
   *
   * <code>WEBCAL = 25;</code>
   */
  WEBCAL(25),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      CustomSafeUrlScheme.class.getName());
  }
  /**
   * <pre>
   * Schemes that are safe w.r.t. XSS but that may trigger other problematic
   * actions when presented in the context of a "regular" link are not
   * allowed by default but can still be converted to SafeUrl by
   * allowing them explicitly in the SafeUrl sanitization API. In other
   * words, the caller has to indicate that they're expecting to process
   * such custom schemes.
   *
   * iOS Webview does not ask for confirmation before invoking 'tel', so
   * unintentional or out-of-context clicks could result in unintended calling
   * charges.
   * </pre>
   *
   * <code>TEL = 0;</code>
   */
  public static final int TEL_VALUE = 0;
  /**
   * <code>SMS = 1;</code>
   */
  public static final int SMS_VALUE = 1;
  /**
   * <pre>
   * Similarly to 'tel' can result in unintended calling charges on iOS.
   * </pre>
   *
   * <code>CALLTO = 2;</code>
   */
  public static final int CALLTO_VALUE = 2;
  /**
   * <code>WTAI = 3;</code>
   */
  public static final int WTAI_VALUE = 3;
  /**
   * <pre>
   * Can start a media stream, potentially triggering an exploit for
   * Stagefright.
   * </pre>
   *
   * <code>RTSP = 4;</code>
   */
  public static final int RTSP_VALUE = 4;
  /**
   * <pre>
   * Can open Play Store dialog with 'Install' button, though will not
   * automatically install an app.
   * </pre>
   *
   * <code>MARKET = 5;</code>
   */
  public static final int MARKET_VALUE = 5;
  /**
   * <code>GEO = 6;</code>
   */
  public static final int GEO_VALUE = 6;
  /**
   * <code>SKYPE = 7;</code>
   */
  public static final int SKYPE_VALUE = 7;
  /**
   * <code>WHATSAPP = 8;</code>
   */
  public static final int WHATSAPP_VALUE = 8;
  /**
   * <pre>
   * Custom scheme for iTunes URIs.
   * </pre>
   *
   * <code>ITMS = 20;</code>
   */
  public static final int ITMS_VALUE = 20;
  /**
   * <pre>
   * Custom scheme for iBooks URIs. More background: b/32807272.
   * </pre>
   *
   * <code>ITMS_BOOKS = 9;</code>
   */
  public static final int ITMS_BOOKS_VALUE = 9;
  /**
   * <pre>
   * Custom scheme for Google Glass URIs. More background: b/74019421.
   * </pre>
   *
   * <code>GLASS = 10;</code>
   */
  public static final int GLASS_VALUE = 10;
  /**
   * <pre>
   * Custom schemes for App Store URIs. More background: b/77343280.
   * </pre>
   *
   * <code>ITMS_APPS = 11;</code>
   */
  public static final int ITMS_APPS_VALUE = 11;
  /**
   * <code>ITMS_APPSS = 19;</code>
   */
  public static final int ITMS_APPSS_VALUE = 19;
  /**
   * <pre>
   * Custom scheme for iTunes enterprise/development app downloads.
   * </pre>
   *
   * <code>ITMS_SERVICES = 22;</code>
   */
  public static final int ITMS_SERVICES_VALUE = 22;
  /**
   * <code>GOOGLEASSISTANT = 12;</code>
   */
  public static final int GOOGLEASSISTANT_VALUE = 12;
  /**
   * <code>ASSISTANT_SETTINGS = 13;</code>
   */
  public static final int ASSISTANT_SETTINGS_VALUE = 13;
  /**
   * <pre>
   * Can open a terminal; some terminal emulators have a history of RCE.
   * At least chrome opens a confirmation prompt.
   * </pre>
   *
   * <code>SSH = 14;</code>
   */
  public static final int SSH_VALUE = 14;
  /**
   * <pre>
   * Only "browseable" intents can be opened with an intent: URI. Any webpage
   * can open any intent URL. However, switching apps can be disruptive to UX.
   * </pre>
   *
   * <code>INTENT = 15;</code>
   */
  public static final int INTENT_VALUE = 15;
  /**
   * <pre>
   * "sip:" is very much like "tel:" but with an email address.
   * </pre>
   *
   * <code>SIP = 16;</code>
   */
  public static final int SIP_VALUE = 16;
  /**
   * <code>GOOGLEHOME = 17;</code>
   */
  public static final int GOOGLEHOME_VALUE = 17;
  /**
   * <code>CHROMECAST = 18;</code>
   */
  public static final int CHROMECAST_VALUE = 18;
  /**
   * <code>PAY = 21;</code>
   */
  public static final int PAY_VALUE = 21;
  /**
   * <code>GOOGLEAPP = 23;</code>
   */
  public static final int GOOGLEAPP_VALUE = 23;
  /**
   * <pre>
   * cid: schemes are not interpreted by browsers, but by mail clients.
   * and only typically refer to resources that are already part of the message.
   * </pre>
   *
   * <code>CID = 24;</code>
   */
  public static final int CID_VALUE = 24;
  /**
   * <pre>
   * webcal: safe w.r.t. XSS. Navigates to a calendar app, which will subscribe
   * to the .ical file rather than downloading the file. Google calendar asks
   * confirmation if the user wants to subscribe to the calendar.
   * </pre>
   *
   * <code>WEBCAL = 25;</code>
   */
  public static final int WEBCAL_VALUE = 25;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CustomSafeUrlScheme valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CustomSafeUrlScheme forNumber(int value) {
    switch (value) {
      case 0: return TEL;
      case 1: return SMS;
      case 2: return CALLTO;
      case 3: return WTAI;
      case 4: return RTSP;
      case 5: return MARKET;
      case 6: return GEO;
      case 7: return SKYPE;
      case 8: return WHATSAPP;
      case 20: return ITMS;
      case 9: return ITMS_BOOKS;
      case 10: return GLASS;
      case 11: return ITMS_APPS;
      case 19: return ITMS_APPSS;
      case 22: return ITMS_SERVICES;
      case 12: return GOOGLEASSISTANT;
      case 13: return ASSISTANT_SETTINGS;
      case 14: return SSH;
      case 15: return INTENT;
      case 16: return SIP;
      case 17: return GOOGLEHOME;
      case 18: return CHROMECAST;
      case 21: return PAY;
      case 23: return GOOGLEAPP;
      case 24: return CID;
      case 25: return WEBCAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CustomSafeUrlScheme>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CustomSafeUrlScheme> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CustomSafeUrlScheme>() {
          public CustomSafeUrlScheme findValueByNumber(int number) {
            return CustomSafeUrlScheme.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.google.common.html.types.Html.getDescriptor().getEnumTypes().get(0);
  }

  private static final CustomSafeUrlScheme[] VALUES = values();

  public static CustomSafeUrlScheme valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CustomSafeUrlScheme(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:webutil.html.types.CustomSafeUrlScheme)
}

